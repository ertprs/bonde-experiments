pipeline:
  build:
    image: node:10.20.1-slim@sha256:05d1d270480b6e99753076b6656bb5a37edb7ca31af20c008568a556bc82d2a8
    commands:
      - apt-get update && apt-get install -y wget gnupg ca-certificates && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && apt-get update && apt-get install -y google-chrome-stable && rm -rf /var/lib/apt/lists/* && wget --quiet https://raw.githubusercontent.com/vishnubob/wait-for-it/main/wait-for-it.sh -O /usr/sbin/wait-for-it.sh && chmod +x /usr/sbin/wait-for-it.sh
      - yarn global add pnpm
      - pnpm i
      - pnpm m run build
    when:
      event: [push, tag]

  unit-tests:
    image: node:12-alpine
    environment:
      - SKIP_PREFLIGHT_CHECK=true
    commands:
      - apk --update add curl
      - curl -L https://unpkg.com/@pnpm/self-installer | node
      - pnpm m run test
      - pnpm m run coverage
    when:
      event: [push]

  publish-stag-experiments-mob-generator:
    image: plugins/docker
    repo: nossas/bonde-experiments-mob-generator
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [feature/mob-generator-*, main]
      event: push
  
  publish-stag-notifications-api:
    image: plugins/docker
    repo: nossas/bonde-notifications
    secrets: [docker_username, docker_password]
    group: publishing
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      event: push
      branch: [feature/*, hotfix/*, main]

  publish-stag-experiments-zap-central-server:
    image: plugins/docker
    repo: nossas/bonde-experiments-zap-central-server
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [feature/zap-central-*, main]
      event: push
  
  publish-stag-activists-api:
    image: plugins/docker
    repo: nossas/bonde-activists
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [feature/*, hotfix/*, main]
      event: push

  publish-prod-notifications-api:
    image: plugins/docker
    repo: nossas/bonde-notifications
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_TAG##v}
      - latest
    when:
      status: success
      event: tag

  publish-prod-activists-api:
    image: plugins/docker
    repo: nossas/bonde-activists
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_TAG##v}
      - latest
    when:
      status: success
      event: tag

  publish-prod-experiments-mob-generator:
    image: plugins/docker
    repo: nossas/bonde-experiments-mob-generator
    group: publishing
    secrets: [docker_username, docker_password]
    tags:
      - ${DRONE_TAG##v}
      - latest
    when:
      status: success
      event: tag

  deploy-stag-listener-experiments-mob-generator:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: listeners/mob-generator
    group: deploying
    docker_image: nossas/bonde-experiments-mob-generator:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [rancher_access_key, rancher_secret_key]
    when:
      status: success
      branch: [feature/generator-*, main]
      event: push
  
  deploy-stag-notifications-api:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: experiments/notifications
    group: deploying
    docker_image: nossas/bonde-notifications:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [rancher_access_key, rancher_secret_key]
    when:
      status: success
      branch: [feature/*, hotfix/*, main]
      event: push
  
  deploy-stag-activists-api:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: experiments/activists
    group: deploying
    docker_image: nossas/bonde-activists:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [rancher_access_key, rancher_secret_key]
    when:
      status: success
      branch: [feature/*, hotfix/*, main]
      event: push

  deploy-prod-notifications-api:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: experiments/notifications
    docker_image: "nossas/bonde-notifications:${DRONE_TAG##v}"
    timeout: 360
    group: deploying
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag

  deploy-prod-activists-api:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: experiments/activists
    docker_image: "nossas/bonde-activists:${DRONE_TAG##v}"
    timeout: 360
    group: deploying
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag

  deploy-prod-listener-experiments-mob-generator:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: listeners/mob-generator
    docker_image: "nossas/bonde-experiments-mob-generator:${DRONE_TAG##v}"
    timeout: 360
    group: deploying
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag

  notify:
    image: plugins/slack
    channel: bonde_bots
    username: CI - ${DRONE_REPO_NAME}
    secrets: [ slack_webhook ]
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]